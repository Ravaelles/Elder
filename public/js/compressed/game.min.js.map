{"version":3,"sources":["project.js","map-auxiliary.js","map-coordinates.js","map-initialize.js","map-move.js","map-object.js","map-tile.js","map-vars.js","map-zoom.js"],"names":[],"mappingsrIA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"game.min.js","sourcesContent":["// =========================================================\r\n// === GENERIC =============================================\r\n// =========================================================\r\n\r\n/**\r\n * Shows popup message with OK|Cancel buttons. Best to use before deleting objects, on Delete button.\r\n * @param {type} message\r\n * @returns {Boolean}\r\n */\r\nfunction confirmDelete(message, disallowPleaseWaitOverlay) {\r\n    if (!message) {\r\n        message = \"Are you sure you want to delete?\";\r\n    }\r\n\r\n    if (confirm(message)) {\r\n        if (!disallowPleaseWaitOverlay) {\r\n            showPleaseWait();\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Displays overlay with \"Please wait\" text. Based on bootstrap modal. Contains animated progress bar.\r\n */\r\nfunction showPleaseWait() {\r\n    var modalLoading = '<div class=\"modal\" id=\"pleaseWaitDialog\" data-backdrop=\"static\" data-keyboard=\"false role=\"dialog\">\\\r\n        <div class=\"modal-dialog\">\\\r\n            <div class=\"modal-content\">\\\r\n                <div class=\"modal-header\">\\\r\n                    <h4 class=\"modal-title\">Please wait...</h4>\\\r\n                </div>\\\r\n                <div class=\"modal-body\">\\\r\n                    <div class=\"progress\">\\\r\n                      <div class=\"progress-bar progress-bar-success progress-bar-striped active\" role=\"progressbar\"\\\r\n                      aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:100%; height: 40px\">\\\r\n                      </div>\\\r\n                    </div>\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n    </div>';\r\n    $(document.body).append(modalLoading);\r\n    $(\"#pleaseWaitDialog\").modal(\"show\");\r\n}\r\n\r\n/**\r\n * Hides \"Please wait\" overlay. See function showPleaseWait().\r\n */\r\nfunction hidePleaseWait() {\r\n    $(\"#pleaseWaitDialog\").modal(\"hide\");\r\n}\r\n\r\nfunction scrollToElement(selector, miliseconds) {\r\n    if (!miliseconds) {\r\n        miliseconds = 1500;\r\n    }\r\n    $('html, body').animate({\r\n        scrollTop: $(selector).offset().top\r\n    }, miliseconds);\r\n}\r\n\r\nfunction appendErrorToBody(message) {\r\n    $(document.body).append(\"<div style='background-color: #a22l color: white;'>\" + message + \"</div>\");\r\n}\r\n\r\nfunction setCookie(cookieName, value, expireSecond) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (expireSecond * 1000));\r\n    var expires = \"expires=\" + d.toGMTString();\r\n    document.cookie = cookieName + \"=\" + value + \"; \" + expires;\r\n}\r\n\r\nfunction getCookie(cookieName) {\r\n    var name = cookieName + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ')\r\n            c = c.substring(1);\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction rand(min, max) {\r\n    return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nfunction randArray(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nfunction randElem(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nfunction stringStartsWith(string, prefix) {\r\n    return string.lastIndexOf(prefix, 0) === 0;\r\n}\r\n\r\nString.prototype.replaceAt = function (index, character) {\r\n    return this.substr(0, index) + character + this.substr(index + character.length);\r\n}\r\n\r\n// =========================================================\r\n// ===== SPECIFIC ==========================================\r\n// =========================================================\r\n\r\nfunction typeSounds() {\r\n    $('input').keyup(function (e) {\r\n        playTypeSound();\r\n    });\r\n    $(\"label\").click(function () {\r\n        playTypeSound();\r\n    });\r\n    $(\"button\").click(function () {\r\n        playTypeSound();\r\n    });\r\n    $(\".create-account-button\").click(function () {\r\n        playTypeSound();\r\n    });\r\n}\r\n\r\nfunction playTypeSound() {\r\n    soundIndex = Math.floor((Math.random() * 5) + 1);\r\n    $(document.body).append('<audio controls autoplay style=\"display: none\" id=\"audio\"><source src=\"/sound/terminal/type' + soundIndex + '.mp3\" type=\"audio/mpeg\"></audio>');\r\n}\r\n","function log(text) {\r\n    var object = console;\r\n    object.log(text);\r\n}\r\n\r\n","// =========================================================================\n// Coordinates for tile\n\nfunction getCanvasXForTile(tileX) {\n    return (tileX * getTileSize());\n}\n\nfunction getCanvasYForTile(tileY) {\n    return (tileY * getTileSize());\n}\n\n// =========================================================================\n// Coordinates for map objects\n\n//function getCanvasXForMapObject(mapObject) {\n//    return ((mapObject['TX'] + 0.5 + mapObject['dTX']) * getTileSize()) - getTileSize() / 2;\n////    return ((mapObject['TX'] + 0.5 + mapObject['dTX']) * getTileSize()) - mapObject['width'] / 2;\n//}\n//\n//function getCanvasYForMapObject(mapObject) {\n//    return ((mapObject['TY'] + 0.5 + mapObject['dTY']) * getTileSize()) - mapObject['height'] / 2;\n////    return ((mapObject['TY'] + 0.5 + mapObject['dTY']) * getTileSize());\n//}","window.initQueue.push(function () {\r\n    var mapWidth = world['map-width'];\r\n    var mapHeight = world['map-height'];\r\n    var tiles = world['tiles'];\r\n    var rawMapObjects = world['map-objects'];\r\n    var html = \"\";\r\n\r\n    // === Tiles ======================================================================\r\n\r\n    for (row = 0; row < mapHeight; row++) {\r\n        for (col = 0; col < mapWidth; col++) {\r\n            html += createElement_tile(tiles[row][col], col, row);\r\n        }\r\n    }\r\n\r\n    // === MapObjects ======================================================================\r\n\r\n    for (var i in rawMapObjects) {\r\n        var rawMapObject = rawMapObjects[i];\r\n        console.log(rawMapObject);\r\n        var mapObject = new MapObject(rawMapObject);\r\n        html += mapObject.createElement();\r\n    }\r\n\r\n    // =========================================================================\r\n    // Add html to the map\r\n\r\n    addHtmlToMapCanvas(html);\r\n});\r\n\r\n// =========================================================================\r\n// =========================================================================\r\n// =========================================================================\r\n\r\nfunction addHtmlToMapCanvas(html) {\r\n    var div = document.getElementById('map-canvas');\r\n    div.innerHTML = div.innerHTML + html;\r\n}","var mousePreviousPosition = null;\nvar mouseIsClicked = false;\nvar mouseHasMoved = false;\n\n// =========================================================================\n\nfunction initializeMapMove() {\n    $(\"#map-canvas\")\n            .mousedown(function (event) {\n                mapMouseDown(event);\n            })\n            .mouseup(function (event) {\n                mapMouseUp(event);\n            })\n            .mousemove(function (event) {\n                mapMouseMove(event);\n            })\n            .mousewheel(function (event) {\n                mapScroll(event);\n            })\n            .mouseleave(function (event) {\n                mapMouseLeave(event);\n            })\n}\n\n// =========================================================================\n\nfunction mapMouseDown(event) {\n    worldmap = $(\".worldmap\");\n\n    // Right click\n    if (event.button === 2) {\n//        console.log(\"Right click\");\n//        event.preventDefault();\n//        event.stopPropagation()();\n//        return true;\n    }\n\n    // Left or middle click\n    else {\n//        worldmapMessage(\"Maximum zoom reached!\", \"#f35\");\n    }\n\n    mousePreviousPosition = event;\n    mouseIsClicked = true;\n    mouseHasMoved = false;\n}\n\nfunction mapMouseUp(event) {\n    if (!mouseHasMoved) {\n        mapClick(event);\n    }\n\n    mouseIsClicked = false;\n    mousePreviousPosition = null;\n    mouseHasMoved = false;\n}\n\nfunction mapMouseMove(event) {\n    if (mouseIsClicked) {\n        mouseHasMoved = true;\n    }\n\n    if (mouseIsClicked && mousePreviousPosition != null) {\n        translationVector = moveWorldmapBackgroundImage(event);\n        moveWorldmapObjects(translationVector);\n    }\n\n    mousePreviousPosition = event;\n\n    // =========================================================================\n    // Show coords\n//    worldmapMessageForever(\n//            \"Mouse points to \" + coordinatesToString(getMapCoordinatesFromScreenClick(event)), 'mouse-cords'\n//            );\n}\n\nfunction mapMouseLeave(event) {\n    if (mouseIsClicked) {\n        mapMouseUp(event);\n        mouseIsClicked = false;\n    }\n}\n\nfunction mapClick(event) {\n    var coordinates = getMapCoordinatesFromScreenClick(event);\n    gameLog('<span>[' + coordinates['mapX'] + ',' + coordinates['mapY'] + ']</span> is unknown wasteland, '\n            + 'not very hospitable place.');\n}","function MapObject(mapObject) {\n\n    this.rawMapObject = null; // Array object passed from PHP\n\n    this._width = null;\n    this._height = null;\n\n    // =========================================================================\n\n    this.constructor = function (mapObject) {\n        this.rawMapObject = mapObject;\n    };\n    this.constructor(mapObject);\n\n    // =========================================================================\n\n    this.createElement = function () {\n        var rawMapObject = this.rawMapObject;\n\n        var type = rawMapObject['type'];\n        var canvasX = this.getCanvasX();\n        var canvasY = this.getCanvasY();\n        var zIndex = rawMapObject['TY'] + 2;\n\n        var style = 'z-index:' + zIndex + '; top:' + canvasY + 'px; left:' + canvasX + 'px; '\n                + 'width:' + getTileSize() + 'px';\n\n        var html = '<img class=\"map-object map-object-' + type + '\" style=\"' + style\n                + '\" src=\"' + rawMapObject['image'] + '\">'\n\n        return html;\n    };\n\n    // =========================================================================\n\n    /*\n     * Returns width of image representing this map object according to the current zoom.\n     */\n    this.getWidth = function () {\n        if (this._height === null) {\n            var scaleRatio = getTileSize() / this.getRawWidth();\n            this._width = this.getRawWidth() * scaleRatio;\n        }\n        return this._width;\n    };\n\n    /*\n     * Returns height of image representing this map object according to the current zoom.\n     */\n    this.getHeight = function () {\n        if (this._height === null) {\n            var scaleRatio = getTileSize() / this.getRawWidth();\n            this._height = this.getRawHeight() * scaleRatio;\n        }\n        return this._height;\n    };\n\n    this.getCanvasX = function () {\n        return ((this.rawMapObject['TX'] + 0.5 + this.rawMapObject['dTX']) * getTileSize())\n                - getTileSize() / 2;\n        //    return ((mapObject['TX'] + 0.5 + mapObject['dTX']) * getTileSize()) - mapObject['width'] / 2;\n    };\n\n    this.getCanvasY = function () {\n        return ((this.rawMapObject['TY'] + 0.5 + this.rawMapObject['dTY']) * getTileSize())\n                - (this.isVerticalAlignofImageToTheBottom() ? (getTileSize() / 2) : (this.getHeight() / 2));\n        //    return ((mapObject['TY'] + 0.5 + mapObject['dTY']) * getTileSize());\n    };\n\n    // =========================================================================\n\n    this.getRawType = function () {\n        return this.rawMapObject.type;\n    };\n\n    this.getRawWidth = function () {\n        return this.rawMapObject['width'];\n    };\n\n    this.getRawHeight = function () {\n        return this.rawMapObject['height'];\n    };\n\n    this.isVerticalAlignofImageToTheBottom = function () {\n        return this.rawMapObject['vertical-align'] === 'bottom';\n    };\n\n}","function createElement_tile(tile, x, y) {\r\n    var canvasX = getCanvasXForTile(x);\r\n    var canvasY = getCanvasYForTile(y);\r\n\r\n    var style = 'top: ' + canvasY + 'px; left: ' + canvasX + 'px;';\r\n\r\n    var html = '<img class=\"map-tile\" data-x=\"' + x + '\" data-y=\"' + y + '\" style=\"' + style\r\n            + '\" src=\"' + tile['image'] + '\"' + ' width=' + getTileSize() + ' height=' + getTileSize() + '>';\r\n\r\n    return html;\r\n}\r\n\r\n","var TILE_SIZE = 128;\r\n//var MAP_CANVAS_OFFSET_TOP = 0;\r\n//var MAP_CANVAS_OFFSET_LEFT = 0;\r\n\r\nfunction getTileSize() {\r\n    return TILE_SIZE;\r\n}","window.initQueue.push(function () {\n    $(\"#map-canvas\").mousewheel(function (event) {\n        _mapScroll(event);\n    });\n});\n\n// =========================================================================\n\nfunction changeZoom(event, isZoomIn) {\n\n}\n\n// =========================================================================\n\nfunction _mapScroll(event) {\n    var scrollType = event.deltaY; // 1 for wheel up, -1 for wheel down\n\n    // Wheel up\n    if (scrollType >= 1) {\n        changeZoom(event, false);\n    }\n\n    // Wheel down\n    else if (scrollType <= -1) {\n        changeZoom(event, true);\n    }\n\n    // Force mouse move event as scroll will change cursor relative position on the map\n//    mapMouseMove(event);\n}"],"sourceRoot":"/source/"}