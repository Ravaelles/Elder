function log(text) {
    var object = console;
    object.log(text);
}


window.initQueue.push(function () {
    var mapWidth = world['map-width'];
    var mapHeight = world['map-height'];
    var tiles = world['tiles'];
    var mapObjects = world['map-objects'];
    var html = "";

    // === Tiles ======================================================================

    for (row = 0; row < mapHeight; row++) {
        for (col = 0; col < mapWidth; col++) {
            html += createElement_tile(tiles[row][col], col, row);
        }
    }

    // === MapObjects ======================================================================

    for (var i in mapObjects) {
        var mapObject = mapObjects[i];
        html += createElement_mapObject(mapObject);
    }

    // =========================================================================
    // Add html to the map

    addHtmlToMapCanvas(html);
});

// =========================================================================
// =========================================================================
// =========================================================================

function createElement_tile(tile, x, y) {
    var html = '<img class="map-tile" style="top: ' + (y * TILE_SIZE) + 'px; left: '
            + (x * TILE_SIZE) + 'px" src="' + tile['image'] + '">';
    //        html = '<img class="map-object" style="top: ' + (y * TILE_SIZE / 2) + 'px; left: '
    //                + (x * TILE_SIZE + (y % 2 === 0 ? 0 : TILE_SIZE / 2)) + 'px" src="' + tile['image'] + '">';
    //        $("#map-canvas").append(html);

//    addHtmlToMapCanvas(html);
    return html;
}

function createElement_mapObject(mapObject) {
//    console.log(mapObject);
    var x = mapObject['x'] + mapObject['dx'];
    var y = mapObject['y'] + mapObject['dy'];
    var html = '<img class="map-object" style="top: ' + (y * TILE_SIZE) + 'px; left: '
            + (x * TILE_SIZE) + 'px" src="' + mapObject['image'] + '">'

//    addHtmlToMapCanvas(html);
    return html;
}

// =========================================================================

function addHtmlToMapCanvas(html) {
    var div = document.getElementById('map-canvas');
    div.innerHTML = div.innerHTML + html;
}
var mousePreviousPosition = null;
var mouseIsClicked = false;
var mouseHasMoved = false;

// =========================================================================

function initializeMapMove() {
    $("#map-canvas")
            .mousedown(function (event) {
                mapMouseDown(event);
            })
            .mouseup(function (event) {
                mapMouseUp(event);
            })
            .mousemove(function (event) {
                mapMouseMove(event);
            })
            .mousewheel(function (event) {
                mapScroll(event);
            })
            .mouseleave(function (event) {
                mapMouseLeave(event);
            })
}

// =========================================================================

function mapMouseDown(event) {
    worldmap = $(".worldmap");

    // Right click
    if (event.button === 2) {
//        console.log("Right click");
//        event.preventDefault();
//        event.stopPropagation()();
//        return true;
    }

    // Left or middle click
    else {
//        worldmapMessage("Maximum zoom reached!", "#f35");
    }

    mousePreviousPosition = event;
    mouseIsClicked = true;
    mouseHasMoved = false;
}

function mapMouseUp(event) {
    if (!mouseHasMoved) {
        mapClick(event);
    }

    mouseIsClicked = false;
    mousePreviousPosition = null;
    mouseHasMoved = false;
}

function mapMouseMove(event) {
    if (mouseIsClicked) {
        mouseHasMoved = true;
    }

    if (mouseIsClicked && mousePreviousPosition != null) {
        translationVector = moveWorldmapBackgroundImage(event);
        moveWorldmapObjects(translationVector);
    }

    mousePreviousPosition = event;

    // =========================================================================
    // Show coords
//    worldmapMessageForever(
//            "Mouse points to " + coordinatesToString(getMapCoordinatesFromScreenClick(event)), 'mouse-cords'
//            );
}

function mapMouseLeave(event) {
    if (mouseIsClicked) {
        mapMouseUp(event);
        mouseIsClicked = false;
    }
}

function mapClick(event) {
    var coordinates = getMapCoordinatesFromScreenClick(event);
    gameLog('<span>[' + coordinates['mapX'] + ',' + coordinates['mapY'] + ']</span> is unknown wasteland, '
            + 'not very hospitable place.');
}
var TILE_SIZE = 80;
window.initQueue.push(function () {
    $("#map-canvas").mousewheel(function (event) {
        _mapScroll(event);
    });
});

// =========================================================================

function changeZoom(event, isZoomIn) {

}

// =========================================================================

function _mapScroll(event) {
    var scrollType = event.deltaY; // 1 for wheel up, -1 for wheel down

    // Wheel up
    if (scrollType >= 1) {
        changeZoom(event, false);
    }

    // Wheel down
    else if (scrollType <= -1) {
        changeZoom(event, true);
    }

    // Force mouse move event as scroll will change cursor relative position on the map
//    mapMouseMove(event);
}
//# sourceMappingURL=map.min.js.map
