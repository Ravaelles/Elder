{"version":3,"sources":["map-auxiliary.js","map-initialize.js","map-move.js","map-vars.js","map-zoom.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.min.js","sourcesContent":["function log(text) {\r\n    var object = console;\r\n    object.log(text);\r\n}\r\n\r\n","window.initQueue.push(function () {\r\n    var mapWidth = world['map-width'];\r\n    var mapHeight = world['map-height'];\r\n    var tiles = world['tiles'];\r\n    var mapObjects = world['map-objects'];\r\n    var html = \"\";\r\n\r\n    // === Tiles ======================================================================\r\n\r\n    for (row = 0; row < mapHeight; row++) {\r\n        for (col = 0; col < mapWidth; col++) {\r\n            html += createElement_tile(tiles[row][col], col, row);\r\n        }\r\n    }\r\n\r\n    // === MapObjects ======================================================================\r\n\r\n    for (var i in mapObjects) {\r\n        var mapObject = mapObjects[i];\r\n        html += createElement_mapObject(mapObject);\r\n    }\r\n\r\n    // =========================================================================\r\n    // Add html to the map\r\n\r\n    addHtmlToMapCanvas(html);\r\n});\r\n\r\n// =========================================================================\r\n// =========================================================================\r\n// =========================================================================\r\n\r\nfunction createElement_tile(tile, x, y) {\r\n    var html = '<img class=\"map-tile\" style=\"top: ' + (y * TILE_SIZE) + 'px; left: '\r\n            + (x * TILE_SIZE) + 'px\" src=\"' + tile['image'] + '\">';\r\n    //        html = '<img class=\"map-object\" style=\"top: ' + (y * TILE_SIZE / 2) + 'px; left: '\r\n    //                + (x * TILE_SIZE + (y % 2 === 0 ? 0 : TILE_SIZE / 2)) + 'px\" src=\"' + tile['image'] + '\">';\r\n    //        $(\"#map-canvas\").append(html);\r\n\r\n//    addHtmlToMapCanvas(html);\r\n    return html;\r\n}\r\n\r\nfunction createElement_mapObject(mapObject) {\r\n//    console.log(mapObject);\r\n    var x = mapObject['x'] + mapObject['dx'];\r\n    var y = mapObject['y'] + mapObject['dy'];\r\n    var html = '<img class=\"map-object\" style=\"top: ' + (y * TILE_SIZE) + 'px; left: '\r\n            + (x * TILE_SIZE) + 'px\" src=\"' + mapObject['image'] + '\">'\r\n\r\n//    addHtmlToMapCanvas(html);\r\n    return html;\r\n}\r\n\r\n// =========================================================================\r\n\r\nfunction addHtmlToMapCanvas(html) {\r\n    var div = document.getElementById('map-canvas');\r\n    div.innerHTML = div.innerHTML + html;\r\n}","var mousePreviousPosition = null;\nvar mouseIsClicked = false;\nvar mouseHasMoved = false;\n\n// =========================================================================\n\nfunction initializeMapMove() {\n    $(\"#map-canvas\")\n            .mousedown(function (event) {\n                mapMouseDown(event);\n            })\n            .mouseup(function (event) {\n                mapMouseUp(event);\n            })\n            .mousemove(function (event) {\n                mapMouseMove(event);\n            })\n            .mousewheel(function (event) {\n                mapScroll(event);\n            })\n            .mouseleave(function (event) {\n                mapMouseLeave(event);\n            })\n}\n\n// =========================================================================\n\nfunction mapMouseDown(event) {\n    worldmap = $(\".worldmap\");\n\n    // Right click\n    if (event.button === 2) {\n//        console.log(\"Right click\");\n//        event.preventDefault();\n//        event.stopPropagation()();\n//        return true;\n    }\n\n    // Left or middle click\n    else {\n//        worldmapMessage(\"Maximum zoom reached!\", \"#f35\");\n    }\n\n    mousePreviousPosition = event;\n    mouseIsClicked = true;\n    mouseHasMoved = false;\n}\n\nfunction mapMouseUp(event) {\n    if (!mouseHasMoved) {\n        mapClick(event);\n    }\n\n    mouseIsClicked = false;\n    mousePreviousPosition = null;\n    mouseHasMoved = false;\n}\n\nfunction mapMouseMove(event) {\n    if (mouseIsClicked) {\n        mouseHasMoved = true;\n    }\n\n    if (mouseIsClicked && mousePreviousPosition != null) {\n        translationVector = moveWorldmapBackgroundImage(event);\n        moveWorldmapObjects(translationVector);\n    }\n\n    mousePreviousPosition = event;\n\n    // =========================================================================\n    // Show coords\n//    worldmapMessageForever(\n//            \"Mouse points to \" + coordinatesToString(getMapCoordinatesFromScreenClick(event)), 'mouse-cords'\n//            );\n}\n\nfunction mapMouseLeave(event) {\n    if (mouseIsClicked) {\n        mapMouseUp(event);\n        mouseIsClicked = false;\n    }\n}\n\nfunction mapClick(event) {\n    var coordinates = getMapCoordinatesFromScreenClick(event);\n    gameLog('<span>[' + coordinates['mapX'] + ',' + coordinates['mapY'] + ']</span> is unknown wasteland, '\n            + 'not very hospitable place.');\n}","var TILE_SIZE = 80;","window.initQueue.push(function () {\n    $(\"#map-canvas\").mousewheel(function (event) {\n        _mapScroll(event);\n    });\n});\n\n// =========================================================================\n\nfunction changeZoom(event, isZoomIn) {\n\n}\n\n// =========================================================================\n\nfunction _mapScroll(event) {\n    var scrollType = event.deltaY; // 1 for wheel up, -1 for wheel down\n\n    // Wheel up\n    if (scrollType >= 1) {\n        changeZoom(event, false);\n    }\n\n    // Wheel down\n    else if (scrollType <= -1) {\n        changeZoom(event, true);\n    }\n\n    // Force mouse move event as scroll will change cursor relative position on the map\n//    mapMouseMove(event);\n}"],"sourceRoot":"/source/"}